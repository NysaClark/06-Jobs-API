openapi: 3.0.0
info:
  title: Job API
  contact: {}
  version: '1.0'
servers:
- url: http://example.com
  variables: {}
paths:
  /:
    post:
      tags:
      - Jobs
      summary: createJob
      operationId: createJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createJobRequest'
            example:
              company: Apple
              position: front end developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
      - Jobs
      summary: getAllJobs
      operationId: getAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /{id}:
    get:
      tags:
      - Jobs
      summary: getJob
      operationId: getJob
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 6192ebae9cce4738c1ffbe7a
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - Jobs
      summary: deleteJob
      operationId: deleteJob
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 61943db1eec806fb647df56f
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    put:
      tags:
      - Jobs
      summary: updateJob
      operationId: updateJob
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 6192ebae9cce4738c1ffbe7a
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateJobRequest'
            example:
              company: west-mec
              position: student
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /register:
    post:
      tags:
      - Auth
      summary: Auth Register
      operationId: AuthRegister
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRegisterRequest'
            example:
              name: Nysa
              email: aasdfasd@gmail.com
              password: '1234512'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /login:
    post:
      tags:
      - Auth
      summary: Auth Login
      operationId: AuthLogin
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginRequest'
            example:
              email: asdf@gmail.com
              password: '1234512'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    createJobRequest:
      title: createJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Apple
        position: front end developer
    updateJobRequest:
      title: updateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: west-mec
        position: student
    AuthRegisterRequest:
      title: AuthRegisterRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Nysa
        email: aasdfasd@gmail.com
        password: '1234512'
    AuthLoginRequest:
      title: AuthLoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: asdf@gmail.com
        password: '1234512'
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: Jobs
  description: 'CRUD operations on mongo DB'
- name: Auth
  description: 'Register new users and login existing ones'